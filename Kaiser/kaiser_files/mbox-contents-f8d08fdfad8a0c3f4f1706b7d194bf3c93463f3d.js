var mboxCopyright = "Copyright 1996-2015. Adobe Systems Incorporated. All rights reserved.";var TNT = TNT || {};TNT.a = (function() { return { nestedMboxes: [], b: { companyName: "Test&amp;Target", isProduction: true, adminUrl: "http://admin10.testandtarget.omniture.com/admin", clientCode: "kaiser", serverHost: "kaiser.tt.omtrdc.net", mboxTimeout: 15000, mboxLoadedTimeout: 100, cleanupTimeout: 1000, mboxFactoryDisabledTimeout: 30 * 60, bodyPollingTimeout: 16, bodyHidingEnabled: false, bodyHiddenStyle: "body{opacity:0}", sessionExpirationTimeout: 31 * 60, experienceManagerDisabledTimeout: 30 * 60, experienceManagerTimeout: 5000, visitorApiTimeout: 500, visitorApiPageDisplayTimeout: 500, overrideMboxEdgeServer: false, overrideMboxEdgeServerTimeout: 31 * 60, tntIdLifetime: 2419200, crossDomain: "disabled", trafficDuration: 10368000, trafficLevelPercentage: 100, clientSessionIdSupport: false, clientTntIdSupport: false, passPageParameters: true, usePersistentCookies: true, crossDomainEnabled: false, crossDomainXOnly: false, imsOrgId: "9644AD4E5628B1ED7F000101@AdobeOrg", globalMboxName: "target-global-mbox", globalMboxLocationDomId: "", globalMboxAutoCreate: true, experienceManagerPluginUrl: "//cdn.tt.omtrdc.net/cdn/target.js", siteCatalystPluginName: "tt", mboxVersion: 60, mboxIsSupportedFunction: function() { return true; }, parametersFunction: function() { return ""; }, cookieDomainFunction: function() { return mboxCookiePageDomain(); } }, c: { d: "mboxPage", e: "mboxMCGVID", f: "mboxMCGLH", g: "mboxAAMB", h: "mboxMCAVID", i: "mboxMCSDID", j: "mboxCount", k: "mboxHost", l: "mboxFactoryId", m: "mboxPC", n: "screenHeight", o: "screenWidth", p: "browserWidth", q: "browserHeight", r: "browserTimeOffset", s: "colorDepth", t: "mboxXDomain", u: "mboxURL", v: "mboxReferrer", w: "mboxVersion", x: "mbox", y: "mboxId", z: "mboxDOMLoaded", A: "mboxTime", B: "scPluginVersion" }, C: { D: "mboxDisable", E: "mboxSession", F: "mboxEnv", G: "mboxDebug" }, H: { D: "disable", E: "session", m: "PC", I: "level", J: "check", G: "debug", K: "em-disabled", L: "mboxEdgeServer" }, M: { N: "default", O: "mbox", P: "mboxImported-", Q: 60000, R: "mboxDefault", S: "mboxMarker-", T: 250, B: 1, U: "mboxedge", V: "tt.omtrdc.net" } }}());TNT.a.W = {};(function(X) { var Y = {}.toString; function Z(_) { return _ === void(0); } function ab(_) { return _ === null; } function bb(_) { if (Z(_) || ab(_)) { return true; } return _.length === 0; } function cb(_) { return Y.call(_) === '[object Function]'; } function db(_) { return Y.call(_) === '[object Array]'; } function eb(_) { return Y.call(_) === '[object String]'; } function fb(_) { return Y.call(_) === '[object Object]'; } function gb(hb, ib) { var jb = hb.length, kb = -1; while (++kb < jb) { ib(hb[kb]); } } X.Z = Z; X.ab = ab; X.bb = bb; X.cb = cb; X.db = db; X.eb = eb; X.fb = fb; X.gb = gb;}(TNT.a.W));mboxUrlBuilder = function(lb, mb) { this.lb = lb; this.mb = mb; this.nb = []; this.ob = function(u) { return u; }; this.pb = null;};mboxUrlBuilder.prototype = { constructor: mboxUrlBuilder, addNewParameter: function (qb, _) { this.nb.push({name: qb, value: _}); return this; }, addParameterIfAbsent: function (qb, _) { if (!_) { return; } for (var rb = 0; rb < this.nb.length; rb++) { var sb = this.nb[rb]; if (sb.name === qb) { return this; } } this.checkInvalidCharacters(qb); return this.addNewParameter(qb, _); }, addParameter: function(qb, _) { this.checkInvalidCharacters(qb); for (var rb = 0; rb < this.nb.length; rb++) { var sb = this.nb[rb]; if (sb.name === qb) { sb.value = _; return this; } } return this.addNewParameter(qb, _); }, addParameters: function(nb) { if (!nb) { return this; } for (var rb = 0; rb < nb.length; rb++) { var tb = nb[rb]; var ub = tb.indexOf('='); if (ub === -1 || ub === 0) { continue; } this.addParameter(tb.substring(0, ub), tb.substring(ub + 1, tb.length)); } return this; }, setServerType: function(vb) { this.wb = vb; }, setBasePath: function(pb) { this.pb = pb; }, setUrlProcessAction: function(xb) { this.ob = xb; }, buildUrl: function() { var yb = TNT.a.zb(this.lb), Ab = this.pb ? this.pb : '/m2/' + this.mb + '/mbox/' + this.wb, Bb = document.location.protocol == 'file:' ? 'http:' : document.location.protocol, u = Bb + "//" + yb + Ab, Cb = []; for (var rb = 0; rb < this.nb.length; rb++) { var sb = this.nb[rb]; Cb.push(encodeURIComponent(sb.name) + '=' + encodeURIComponent(sb.value)); } u += u.indexOf('?') != -1 ? '&' + Cb.join('&') : '?' + Cb.join('&'); return this.Db(this.ob(u)); }, getParameters: function() { return this.nb; }, setParameters: function(nb) { this.nb = nb; }, clone: function() { var Eb = new mboxUrlBuilder(this.lb, this.mb); Eb.setServerType(this.wb); Eb.setBasePath(this.pb); Eb.setUrlProcessAction(this.ob); for (var rb = 0; rb < this.nb.length; rb++) { Eb.addParameter(this.nb[rb].name, this.nb[rb].value); } return Eb; }, Db: function(Fb) { return Fb.replace(/\"/g, '&quot;').replace(/>/g, '&gt;'); }, checkInvalidCharacters: function (qb) { var Gb = new RegExp('(\'|")'); if (Gb.exec(qb)) { throw "Parameter '" + qb + "' contains invalid characters"; } }};TNT.a.Hb = function() { var Ib = [], Jb = 0, Kb = []; function Lb(Mb, Nb) { Jb += 1; Ib[Mb] = Nb; Ob(); } function Ob() { var jb = Kb.length, kb = -1, Pb; if (Jb !== Ib.length || !Kb.length) { return; } while (++kb < jb) { Pb = Kb[kb]; Pb.fn.apply(Pb.ctx, Ib); } } return { Qb: function () { var Mb = Ib.length; Ib[Ib.length] = null; return function () { Lb(Mb, [].slice.call(arguments)); }; }, Rb: function (cb, context) { Kb.push({fn: cb, ctx: context}); Ob(); } };};(function(X, W, c, b, Sb) { function Tb(Ub) { var Vb, Wb = function(Xb) { return 'vst.' + Xb; }; if (!W.cb(Ub.getCustomerIDs)) { return []; } Vb = Ub.getCustomerIDs(); if (!W.fb(Vb)) { return []; } return X.Yb(Vb, [], Wb); } function Zb(Nb) { var _b = []; W.gb(Nb, function(hb) { _b.push(hb[0]); }); return _b; } function ac(bc) { return !W.bb(bc.value); } function cc(Hb, Ub, dc, Xb) { var ec; if (!W.cb(Ub[dc])) { return; } ec = Hb.Qb(); Ub[dc](function(_) { ec({key:Xb, value: _}); }, true); } function fc(Hb, Ub, gc) { gc(Hb, Ub, 'getMarketingCloudVisitorID', c.e); gc(Hb, Ub, 'getAudienceManagerBlob', c.g); gc(Hb, Ub, 'getAnalyticsVisitorID', c.h); gc(Hb, Ub, 'getAudienceManagerLocationHint', c.f); } function hc(Hb, Ub, ic, jc) { if (ic) { jc({optout: ic, params: []}); return; } fc(Hb, Ub, cc); Hb.Rb(function() { var c = Zb([].slice.call(arguments)), _b = []; W.gb(c, function(bc) { if (ac(bc)) { _b.push(encodeURIComponent(bc.key) + '=' + encodeURIComponent(bc.value)); } }); _b.push.apply(_b, Tb(Ub)); jc({optout: ic, params: _b}); }); } function kc(lc) { var Ub; if (W.bb(lc) || W.Z(window.Visitor) || !W.cb(window.Visitor.getInstance)) { return null; } Ub = window.Visitor.getInstance(lc); if (W.Z(Ub) || W.ab(Ub) || !Ub.isAllowed()) { return null; } return Ub; } function mc() { return !W.ab(kc(b.imsOrgId)); } function nc(jc) { var lc = b.imsOrgId, oc = b.visitorApiTimeout, Hb = Sb(), Ub; Ub = kc(lc); if (W.ab(Ub)) { jc(null); return; } if (!W.Z(Ub.loadTimeout)) { Ub.loadTimeout = oc; } if (W.cb(Ub.isOptedOut) && !W.Z(window.Visitor.OptOut)) { Ub.isOptedOut(function(ic) { hc(Hb, Ub, ic, jc); }, window.Visitor.OptOut.GLOBAL, true); } else { hc(Hb, Ub, false, jc); } } function pc(x) { var lc = b.imsOrgId, mb = b.clientCode, Ub = kc(lc); if (W.ab(Ub) || !W.cb(Ub.getSupplementalDataID)) { return ''; } return Ub.getSupplementalDataID('mbox:' + mb + ':' + x); } X.mc = mc; X.nc = nc; X.pc = pc;}(TNT.a, TNT.a.W, TNT.a.c, TNT.a.b, TNT.a.Hb));mboxStandardFetcher = function() { };mboxStandardFetcher.prototype = { constructor: mboxStandardFetcher, getType: function() { return 'standard'; }, fetch: function(qc) { qc.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + qc.buildUrl() + '"><' + '\/scr' + 'ipt>'); }, cancel: function() { }};mboxAjaxFetcher = function() { };mboxAjaxFetcher.prototype = { constructor: mboxAjaxFetcher, getType: function() { return 'ajax'; }, fetch: function(qc) { qc.setServerType(this.getType()); var rc = document.getElementsByTagName('head')[0], sc = document.createElement('script'); sc.src = qc.buildUrl(); rc.appendChild(sc); }, cancel: function() {}};(function(X){ function tc() {} tc.prototype = { constructor: tc, getType: function() { return 'ajax'; }, fetch: function(qc) { qc.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + qc.buildUrl() +'"><' + '\/scr' + 'ipt>'); }, cancel: function() { } }; X.tc = tc;}(TNT.a));mboxMap = function() { this.uc = {}; this.vc = [];};mboxMap.prototype = { constructor: mboxMap, put: function(Xb, _) { if (!this.uc[Xb]) { this.vc[this.vc.length] = Xb; } this.uc[Xb] = _; }, get: function(Xb) { return this.uc[Xb]; }, remove: function(Xb) { var wc = []; this.uc[Xb] = undefined; for (var i = 0; i < this.vc.length; i++) { if (this.vc[i] !== Xb) { wc.push(this.vc[i]); } } this.vc = wc; }, each: function(xb) { for (var rb = 0; rb < this.vc.length; rb++ ) { var Xb = this.vc[rb]; var _ = this.uc[Xb]; if (_) { var _b = xb(Xb, _); if (_b === false) { break; } } } }, isEmpty: function() { return this.vc.length === 0; }};mboxList = function() { this.xc = [];};mboxList.prototype = { constructor: mboxList, add: function(yc) { if (!yc) { return; } this.xc.push(yc); }, get: function(x) { var _b = new mboxList(); for (var rb = 0; rb < this.xc.length; rb++) { var yc = this.xc[rb]; if (yc.getName() === x) { _b.add(yc); } } return _b; }, getById: function(Mb) { return this.xc[Mb]; }, length: function() { return this.xc.length; }, each: function(xb) { var W = TNT.a.W; if (!W.cb(xb)) { throw 'Action must be a function, was: ' + typeof(xb); } for (var rb = 0; rb < this.xc.length; rb++) { xb(this.xc[rb]); } }};mboxSignaler = function(zc) { this.zc = zc;};mboxSignaler.prototype = { constructor: mboxSignaler, signal: function(Ac, x ) { if (!this.zc.isEnabled()) { return; } var Bc = mboxSignaler.Cc(), Dc = this.Ec(this.zc.Fc(x)); Bc.appendChild(Dc); var Nb = [].slice.call(arguments, 1), yc = this.zc.create(x, Nb, Dc), qc = yc.getUrlBuilder(); qc.addParameter(TNT.a.c.d, mboxGenerateId()); yc.setFetcher(new mboxAjaxFetcher()); yc.load(); }, Ec: function(Gc) { var _b = document.createElement('div'); _b.id = Gc; _b.style.visibility = 'hidden'; _b.style.display = 'none'; return _b; }};mboxSignaler.Cc = function() { return document.body;};mboxLocatorDefault = function(Hc) { this.Hc = Hc; document.write('<div id="' + this.Hc + '" style="visibility:hidden;display:none">&nbsp;<\/div>');};mboxLocatorDefault.prototype = { constructor: mboxLocatorDefault, locate: function() { var Ic = 1, Jc = document.getElementById(this.Hc); while (Jc) { if (Jc.nodeType === Ic && Jc.className === 'mboxDefault') { return Jc; } Jc = Jc.previousSibling; } return null; }, force: function() { var Kc = document.getElementById(this.Hc), Lc = document.createElement('div'); Lc.className = 'mboxDefault'; if (Kc) { Kc.parentNode.insertBefore(Lc, Kc); } return Lc; }};mboxLocatorNode = function(Jc) { this.Jc = Jc;};mboxLocatorNode.prototype = { constructor: mboxLocatorNode, locate: function() { return typeof(this.Jc) === 'string' ? document.getElementById(this.Jc) : this.Jc; }, force: function() { return null; }};mboxOfferContent = function() { this.Mc = function() {};};mboxOfferContent.prototype = { constructor: mboxOfferContent, show: function (yc) { var _b = yc.showContent(document.getElementById(yc.getImportName())); if (_b === 1) { this.Mc(); } return _b; }, setOnLoad: function(Mc) { this.Mc = Mc; }};mboxOfferAjax = function(Nc) { this.Nc = Nc; this.Mc = function() {};};mboxOfferAjax.prototype = { constructor: mboxOfferAjax, setOnLoad: function(Mc) { this.Mc = Mc; }, show: function(yc) { var Oc = document.createElement('div'), _b; Oc.id = yc.getImportName(); Oc.innerHTML = this.Nc; _b = yc.showContent(Oc); if (_b === 1) { this.Mc(); } return _b; }};mboxOfferDefault = function() { this.Mc = function() {};};mboxOfferDefault.prototype = { constructor: mboxOfferDefault, show: function(yc) { var _b = yc.hide(); if (_b === 1) { this.Mc(); } return _b; }, setOnLoad: function(Mc) { this.Mc = Mc; }};mboxCookieManager = function(qb, Pc) { this.qb = qb; this.Qc = TNT.a.H.J; this.Rc = TNT.a.b.crossDomainXOnly; this.Sc = TNT.a.H.D; this.Tc = TNT.a.b.usePersistentCookies; this.Uc = new mboxMap(); this.Pc = Pc === '' || Pc.indexOf('.') === -1 ? '' : '; domain=' + Pc; this.loadCookies();};mboxCookieManager.prototype = { constructor: mboxCookieManager, isEnabled: function() { this.setCookie(this.Qc, 'true', 60); this.loadCookies(); return this.getCookie(this.Qc) == 'true'; }, setCookie: function(qb, _, Vc) { if (typeof qb == 'undefined' || typeof _ == 'undefined' || typeof Vc == 'undefined') { return; } var Wc = Math.ceil(Vc + new Date().getTime() / 1000), Xc = mboxCookieManager.Yc(qb, encodeURIComponent(_), Wc); this.Uc.put(qb, Xc); this.saveCookies(); }, getCookie: function(qb) { var Xc = this.Uc.get(qb); return Xc ? decodeURIComponent(Xc.value) : null; }, deleteCookie: function(qb) { this.Uc.remove(qb); this.saveCookies(); }, getCookieNames: function(Zc) { var _c = []; this.Uc.each(function(qb, Xc) { if (qb.indexOf(Zc) === 0) { _c[_c.length] = qb; } }); return _c; }, saveCookies: function() { var ad = this, bd = [], cd = 0; this.Uc.each(function(qb, Xc) { if(!ad.Rc || qb === ad.Sc) { bd[bd.length] = mboxCookieManager.dd(Xc); if (cd < Xc.expireOn) { cd = Xc.expireOn; } } }); var ed = new Date(cd * 1000); var Cb = []; Cb.push(this.qb, '=', bd.join('|')); if (ad.Tc) { Cb.push('; expires=', ed.toGMTString()); } Cb.push('; path=/', this.Pc); document.cookie = Cb.join(""); }, loadCookies: function() { var fd = mboxCookieManager.gd(this.qb), hd = mboxCookieManager.id(fd), jd = Math.ceil(new Date().getTime() / 1000); this.Uc = new mboxMap(); for (var rb = 0; rb < hd.length; rb++) { var Xc = mboxCookieManager.kd(hd[rb]); if (jd > Xc.expireOn) { continue; } this.Uc.put(Xc.name, Xc); } }};mboxCookieManager.dd = function(Xc) { return Xc.name + '#' + Xc.value + '#' + Xc.expireOn;};mboxCookieManager.kd = function(Y) { var Cb = Y.split('#'); return mboxCookieManager.Yc(Cb[0], Cb[1], Cb[2]);};mboxCookieManager.Yc = function(qb, _, Wc) { return {name: qb, value: _, expireOn: Wc};};mboxCookieManager.gd = function(qb) { var result = new RegExp('(^|; )' + encodeURIComponent(qb) + '=([^;]*)').exec(document.cookie); return result ? result[2] : null;};mboxCookieManager.id = function(Y) { if (!Y) { return []; } return Y.split('|');};mboxSession = function(ld, md, nd, od, pd) { var qd = window.mboxForceSessionId; this.nd = nd; this.od = od; this.pd = pd; this.Gc = typeof(qd) !== 'undefined' ? qd : mboxGetPageParameter(md, true); this.Gc = this.Gc || pd.getCookie(nd) || ld; this.pd.setCookie(nd, this.Gc, od);};mboxSession.prototype = { constructor: mboxSession, getId: function() { return this.Gc; }, forceId: function(rd) { this.Gc = rd; this.pd.setCookie(this.nd, this.Gc, this.od); }};mboxPC = function(nd, od, pd) { var sd = window.mboxForcePCId; this.nd = nd; this.od = od; this.pd = pd; this.Gc = typeof(sd) != 'undefined' ? sd: pd.getCookie(nd); if (this.Gc) { pd.setCookie(nd, this.Gc, od); }};mboxPC.prototype = { constructor: mboxPC, getId: function() { return this.Gc; }, forceId: function(rd) { if (this.Gc === rd) { return false; } this.Gc = rd; this.pd.setCookie(this.nd, this.Gc, this.od); return true; }};(function(X, W, H, b, M) { var td = new RegExp(".*\\.(\\d+)_\\d+"); function zb(vd) { var wd = td.exec(vd); if (wd && wd.length === 2) { return M.U + wd[1] + '.' + M.V; } return ''; } function xd(pd, yd) { var yb = zb(yd); if (!W.bb(yb)) { pd.setCookie(H.L, yb, b.overrideMboxEdgeServerTimeout); } } function zd(Ad, pd) { this.Ad= Ad; this.pd = pd; xd(pd, Ad.getId()); } zd.prototype = { constructor: zd, getId: function() { return this.Ad.getId(); }, forceId: function(rd) { if (!this.Ad.forceId(rd)) { return false; } xd(this.pd, rd); return true; } }; X.zd = zd;}(TNT.a, TNT.a.W, TNT.a.H, TNT.a.b, TNT.a.M));mboxGetPageParameter = function(qb, Bd) { Bd = Bd || false; var Cd; if (Bd) { Cd = new RegExp("\\?[^#]*" + qb + "=([^\&;#]*)", "i"); } else { Cd = new RegExp("\\?[^#]*" + qb + "=([^\&;#]*)"); } var _b = null; var Dd = Cd.exec(document.location); if (Dd && Dd.length >= 2) { _b = Dd[1]; } return _b;};mboxCookiePageDomain = function() { var Pc = (/([^:]*)(:[0-9]{0,5})?/).exec(document.location.host)[1]; var Ed = /[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/; if (!Ed.exec(Pc)) { var Fd = (/([^\.]+\.[^\.]{3}|[^\.]+\.[^\.]+\.[^\.]{2})$/).exec(Pc); if (Fd) { Pc = Fd[0]; if (Pc.indexOf("www.") === 0) { Pc=Pc.substr(4); } } } return Pc ? Pc: "";};mboxShiftArray = function(Gd) { var _b = []; for (var rb = 1; rb < Gd.length; rb++) { _b[_b.length] = Gd[rb]; } return _b;};mboxGenerateId = function() { return (new Date()).getTime() + "-" + Math.floor(Math.random() * 999999);};mboxScreenHeight = function() { return screen.height;};mboxScreenWidth = function() { return screen.width;};mboxBrowserWidth = function() { return (window.innerWidth) ? window.innerWidth : document.documentElement ? document.documentElement.clientWidth : document.body.clientWidth;};mboxBrowserHeight = function() { return (window.innerHeight) ? window.innerHeight : document.documentElement ? document.documentElement.clientHeight : document.body.clientHeight;};mboxBrowserTimeOffset = function() { return -new Date().getTimezoneOffset();};mboxScreenColorDepth = function() { return screen.pixelDepth;};mbox = function(qb, Gc, qc, Hd, Id, zc) { this.Jd = null; this.Kd = 0; this.Ld = Hd; this.Id = Id; this.Md = null; this.Nd = new mboxOfferContent(); this.Lc = null; this.qc = qc; this.message = ''; this.Od = {}; this.Pd = 0; this.Qd = 5; this.Gc = Gc; this.qb = qb; this.Rd(); qc.addParameter(TNT.a.c.x, qb); qc.addParameter(TNT.a.c.y, Gc); this.Sd = function() {}; this.Mc = function() {}; this.Td = null; this.Ud = document.documentMode >= 10 && !zc.isDomLoaded(); if (this.Ud) { this.Vd = TNT.a.nestedMboxes; this.Vd.push(this.qb); }};mbox.prototype.getId = function() { return this.Gc;};mbox.prototype.Rd = function() { var maxLength = TNT.a.M.T; if (this.qb.length > maxLength) { throw "Mbox Name " + this.qb + " exceeds max length of " + maxLength + " characters."; } else if (this.qb.match(/^\s+|\s+$/g)) { throw "Mbox Name " + this.qb + " has leading/trailing whitespace(s)."; }};mbox.prototype.getName = function() { return this.qb;};mbox.prototype.getParameters = function() { var nb = this.qc.getParameters(); var _b = []; for (var rb = 0; rb < nb.length; rb++) { if (nb[rb].name.indexOf('mbox') !== 0) { _b[_b.length] = nb[rb].name + '=' + nb[rb].value; } } return _b;};mbox.prototype.setOnLoad = function(xb) { this.Mc = xb; return this;};mbox.prototype.setMessage = function(Wd) { this.message = Wd; return this;};mbox.prototype.setOnError = function(Sd) { this.Sd = Sd; return this;};mbox.prototype.setFetcher = function(Xd) { if (this.Md) { this.Md.cancel(); } this.Md = Xd; return this;};mbox.prototype.getFetcher = function() { return this.Md;};function Yd(qc, yc) { yc.Md.fetch(qc); yc.Zd = setTimeout(function() { yc.Sd('browser timeout', yc.Md.getType()); }, TNT.a.b.mboxTimeout); yc.setEventTime("load.end");}mbox.prototype.load = function(nb) { var qc = this.qc; var ad = this; if (ad.Md === null) { return ad; } ad.setEventTime("load.start"); ad.cancelTimeout(); ad.Kd = 0; if (nb && nb.length > 0) { qc = ad.qc.clone().addParameters(nb); } if (TNT.a.mc()) { TNT.a.nc(function(_d) { if (!_d.optout) { qc.addParameters(_d.params); Yd(qc, ad); } }); } else { Yd(qc, ad); } return ad;};mbox.prototype.loaded = function() { this.cancelTimeout(); if (!this.activate() && this.Pd < this.Qd) { var ad = this; setTimeout(function() { ad.loaded(); }, TNT.a.b.mboxLoadedTimeout); }};mbox.prototype.activate = function() { if (this.Kd) { return this.Kd; } this.setEventTime('activate' + (++this.Pd) + '.start'); if (this.Ud && this.Vd[this.Vd.length - 1] !== this.qb) { return this.Kd; } if (this.show()) { this.cancelTimeout(); this.Kd = 1; } this.setEventTime('activate' + this.Pd + '.end'); if (this.Ud) { this.Vd.pop(); } return this.Kd;};mbox.prototype.isActivated = function() { return this.Kd;};mbox.prototype.setOffer = function(Nd) { var ae = Nd && Nd.show && Nd.setOnLoad; if (!ae) { throw 'Invalid offer'; } var be = TNT.a.b.globalMboxName === this.qb; be = be && Nd instanceof mboxOfferDefault; be = be && this.Md !== null; be = be && this.Md.getType() === 'ajax'; if (!be) { this.Nd = Nd; return this; } var ce = this.Nd.Mc; this.Nd = Nd; this.Nd.setOnLoad(ce); return this;};mbox.prototype.getOffer = function() { return this.Nd;};mbox.prototype.show = function() { this.setEventTime('show.start'); var _b = this.Nd.show(this); this.setEventTime(_b == 1 ? "show.end.ok" : "show.end"); return _b;};mbox.prototype.showContent = function(Nc) { if (!mbox.de(Nc)) { return 0; } this.Lc = mbox.ee(this, this.Lc); if (this.Lc === null) { return 0; } if (!mbox.fe(document.body, this.Lc)) { return 0; } if (this.Lc === Nc) { this.ge(this.Lc); this.Mc(); return 1; } this.he(this.Lc); this.he(Nc); mbox.ie(this, Nc); this.ge(this.Lc); this.Mc(); return 1;};mbox.de = function(Nc) { return Nc !== undefined && Nc !== null;};mbox.fe = function(je, ke) { var DOCUMENT_POSITION_CONTAINED_BY = 16; var le = je.contains !== undefined; if (le) { return je !== ke && je.contains(ke); } else { return Boolean(je.compareDocumentPosition(ke) & DOCUMENT_POSITION_CONTAINED_BY); }};mbox.ee = function(yc, Lc) { if (Lc !== undefined && Lc !== null && mbox.fe(document.body, Lc)) { return Lc; } return yc.getDefaultDiv();};mbox.ie = function(yc, me) { yc.Lc.parentNode.replaceChild(me, yc.Lc); yc.Lc = me;};mbox.prototype.hide = function() { this.setEventTime('hide.start'); var _b = this.showContent(this.getDefaultDiv()); this.setEventTime(_b == 1 ? 'hide.end.ok' : 'hide.end.fail'); return _b;};mbox.prototype.finalize = function() { this.setEventTime('finalize.start'); this.cancelTimeout(); if (!this.getDefaultDiv()) { if (this.Ld.force()) { this.setMessage('No default content, an empty one has been added'); } else { this.setMessage('Unable to locate mbox'); } } if (!this.activate()) { this.hide(); this.setEventTime('finalize.end.hide'); } this.setEventTime('finalize.end.ok');};mbox.prototype.cancelTimeout = function() { if (this.Zd) { clearTimeout(this.Zd); } if (this.Md) { this.Md.cancel(); }};mbox.prototype.getDiv = function() { return this.Lc;};mbox.prototype.getDefaultDiv = function() { if (this.Td === null) { this.Td = this.Ld.locate(); } return this.Td;};mbox.prototype.setEventTime = function(ne) { this.Od[ne] = (new Date()).getTime();};mbox.prototype.getEventTimes = function() { return this.Od;};mbox.prototype.getImportName = function() { return this.Id;};mbox.prototype.getURL = function() { return this.qc.buildUrl();};mbox.prototype.getUrlBuilder = function() { return this.qc;};mbox.prototype.oe = function(Lc) { return Lc.style.display != 'none';};mbox.prototype.ge = function(Lc) { this.pe(Lc, true);};mbox.prototype.he = function(Lc) { this.pe(Lc, false);};mbox.prototype.pe = function(Lc, qe) { Lc.style.visibility = qe ? "visible" : "hidden"; Lc.style.display = qe ? "block" : "none";};mbox.prototype.re = function() { this.Ud = false;};mbox.prototype.relocateDefaultDiv = function() { this.Td = this.Ld.locate();};function se(zc) { zc.getMboxes().each(function(yc) { yc.re(); yc.setFetcher(new mboxAjaxFetcher()); yc.finalize(); });}mboxFactory = function(yb, mb, te) { var ue = TNT.a; var b = ue.b; var W = ue.W; var H = ue.H; var C = ue.C; var M = ue.M; var ve = b.mboxVersion; this.we = false; this.te = te; this.xc = new mboxList(); mboxFactories.put(te, this); this.xe = b.mboxIsSupportedFunction() && typeof (window.attachEvent || document.addEventListener || window.addEventListener) != 'undefined'; this.ye = this.xe && mboxGetPageParameter(C.D, true) === null; var ze = te == M.N; var nd = M.O + (ze ? '' : ('-' + te)); this.pd = new mboxCookieManager(nd, b.cookieDomainFunction()); if (!b.crossDomainXOnly) { this.ye = this.ye && this.pd.isEnabled(); } this.ye = this.ye && W.ab(this.pd.getCookie(H.D)) && W.ab(this.pd.getCookie(H.K)); if (this.isAdmin()) { this.enable(); } this.Ae(); this.Be = mboxGenerateId(); this.Ce = mboxScreenHeight(); this.De = mboxScreenWidth(); this.Ee = mboxBrowserWidth(); this.Fe = mboxBrowserHeight(); this.Ge = mboxScreenColorDepth(); this.He = mboxBrowserTimeOffset(); this.Ie = new mboxSession(this.Be, C.E, H.E, b.sessionExpirationTimeout, this.pd); var Ad = new mboxPC(H.m, b.tntIdLifetime, this.pd); this.Je = b.overrideMboxEdgeServer ? new ue.zd(Ad, this.pd) : Ad; this.qc = new mboxUrlBuilder(yb, mb); this.Ke(this.qc, ze, ve); this.Le = new Date().getTime(); this.Me = this.Le; var ad = this; this.addOnLoad(function() { ad.Me = new Date().getTime(); }); if (this.xe) { this.addOnLoad(function() { ad.we = true; if (ue.mc()) { setTimeout(function () { se(ad); }, b.cleanupTimeout); } else { se(ad); } TNT.a.nestedMboxes = []; }); if (this.ye) { this.limitTraffic(b.trafficLevelPercentage, b.trafficDuration); this.Ne(); this.Oe = new mboxSignaler(this); } else { if (!b.isProduction) { if (this.isAdmin()) { if (!this.isEnabled()) { alert("mbox disabled, probably due to timeout\n" + "Reset your cookies to re-enable\n(this message will only appear in administrative mode)"); } else { alert("It looks like your browser will not allow " + b.companyName + " to set its administrative cookie. To allow setting the" + " cookie please lower the privacy settings of your browser.\n" + "(this message will only appear in administrative mode)"); } } } } }};mboxFactory.prototype.forcePCId = function(rd) { if (!TNT.a.b.clientTntIdSupport) { return; } if (this.Je.forceId(rd)) { this.Ie.forceId(mboxGenerateId()); }};mboxFactory.prototype.forceSessionId = function(rd) { if (!TNT.a.b.clientSessionIdSupport) { return; } this.Ie.forceId(rd);};mboxFactory.prototype.isEnabled = function() { return this.ye;};mboxFactory.prototype.getDisableReason = function() { return this.pd.getCookie(TNT.a.H.D);};mboxFactory.prototype.isSupported = function() { return this.xe;};mboxFactory.prototype.disable = function(Vc, Pe) { if (typeof Vc == 'undefined') { Vc = 60 * 60; } if (typeof Pe == 'undefined') { Pe = 'unspecified'; } if (!this.isAdmin()) { this.ye = false; this.pd.setCookie(TNT.a.H.D, Pe, Vc); }};mboxFactory.prototype.enable = function() { this.ye = true; this.pd.deleteCookie(TNT.a.H.D);};mboxFactory.prototype.isAdmin = function() { return document.location.href.indexOf(TNT.a.C.F) != -1;};mboxFactory.prototype.limitTraffic = function(Qe, Vc) { if (TNT.a.b.trafficLevelPercentage != 100) { if (Qe == 100) { return; } var Re = true; if (parseInt(this.pd.getCookie(TNT.a.H.I)) != Qe) { Re = (Math.random() * 100) <= Qe; } this.pd.setCookie(TNT.a.H.I, Qe, Vc); if (!Re) { this.disable(60 * 60, 'limited by traffic'); } }};mboxFactory.prototype.addOnLoad = function(Se) { if (this.isDomLoaded()) { Se(); } else { var Te = false; var Ue = function() { if (Te) { return; } Te = true; Se(); }; this.Ve.push(Ue); if (this.isDomLoaded() && !Te) { Ue(); } }};mboxFactory.prototype.getEllapsedTime = function() { return this.Me - this.Le;};mboxFactory.prototype.getEllapsedTimeUntil = function(A) { return A - this.Le;};mboxFactory.prototype.getMboxes = function() { return this.xc;};mboxFactory.prototype.get = function(x, y) { return this.xc.get(x).getById(y || 0);};mboxFactory.prototype.update = function(x, nb) { var ue = TNT.a, c = ue.c; if (!this.isEnabled()) { return; } var ad = this; if (!this.isDomLoaded()) { this.addOnLoad(function() { ad.update(x, nb); }); return; } if (this.xc.get(x).length() === 0) { throw "Mbox " + x + " is not defined"; } this.xc.get(x).each(function(yc) { var qc = yc.getUrlBuilder(); qc.addParameter(c.d, mboxGenerateId()); ad.We(qc, x); ad.Xe(qc); ad.Ye(qc, x); yc.load(nb); });};mboxFactory.prototype.setVisitorIdParameters = function(qc, x) { var ue = TNT.a, W = ue.W, c = ue.c, lc = ue.b.imsOrgId, Ub; var Ze = function(Ub, _e, af) { var _; if (!W.Z(Ub[af])) { _ = Ub[af](); if (!W.Z(_)) { qc.addParameter(_e, _); } } }; if (ue.mc()) { Ub = Visitor.getInstance(lc); Ze(Ub, c.e, "getMarketingCloudVisitorID"); Ze(Ub, c.f, "getAudienceManagerLocationHint"); Ze(Ub, c.g, "getAudienceManagerBlob"); Ze(Ub, c.h, "getAnalyticsVisitorID"); this.We(qc, x); }};mboxFactory.prototype.create = function(x, nb, bf) { var yc = this.cf(x, nb, bf); if (yc) { this.We(yc.getUrlBuilder(), x); } return yc;};mboxFactory.prototype.df = function(x, nb, bf) { return this.cf(x, nb, bf);};mboxFactory.prototype.cf = function(x, nb, bf) { if (!this.isSupported()) { return null; } var ef = new Date(); var A = ef.getTime() - (ef.getTimezoneOffset() * TNT.a.M.Q); var qc = this.qc.clone(); qc.addParameter(TNT.a.c.j, this.xc.length() + 1); qc.addParameter(TNT.a.c.A, A); qc.addParameters(nb); this.Xe(qc); this.Ye(qc, x); var y, Ld, yc; if (bf) { Ld = new mboxLocatorNode(bf); } else { if (this.we) { throw 'The page has already been loaded, can\'t write marker'; } Ld = new mboxLocatorDefault(this.Fc(x)); } try { y = this.xc.get(x).length(); yc = new mbox(x, y, qc, Ld, this.ff(x), this); if (this.ye) { if (TNT.a.mc()) { yc.setFetcher(new mboxAjaxFetcher()); } else { yc.setFetcher(this.we ? new mboxAjaxFetcher() : new mboxStandardFetcher()); } } var ad = this; yc.setOnError(function(Wd, vb) { yc.setMessage(Wd); yc.activate(); if (!yc.isActivated()) { ad.disable(TNT.a.b.mboxFactoryDisabledTimeout, Wd); window.location.reload(false); } }); this.xc.add(yc); } catch (gf) { this.disable(); throw 'Failed creating mbox "' + x + '", the error was: ' + gf; } return yc;};mboxFactory.prototype.Xe = function(qc) { var m = this.Je.getId(); if (m) { qc.addParameter(TNT.a.c.m, m); }};mboxFactory.prototype.We = function(qc, x) { var ue = TNT.a, hf = ue.c.i, i = ue.pc(x); if (i) { qc.addParameter(hf, i); }};mboxFactory.prototype.Ye = function(qc, x) { var jf = !TNT.isAutoCreateGlobalMbox() && TNT.getGlobalMboxName() === x; if (jf) { qc.addParameters(TNT.getTargetPageParameters()); }};mboxFactory.prototype.getCookieManager = function() { return this.pd;};mboxFactory.prototype.getPageId = function() { return this.Be;};mboxFactory.prototype.getPCId = function() { return this.Je;};mboxFactory.prototype.getSessionId = function() { return this.Ie;};mboxFactory.prototype.getSignaler = function() { return this.Oe;};mboxFactory.prototype.getUrlBuilder = function() { return this.qc;};mboxFactory.prototype.kf = function(x) { return this.te + '-' + x + '-' + this.xc.get(x).length();};mboxFactory.prototype.Fc = function(x) { return TNT.a.M.S + this.kf(x);};mboxFactory.prototype.ff = function(x) { return TNT.a.M.P + this.kf(x);};mboxFactory.prototype.Ke = function(qc, ze, ve) { qc.addParameter(TNT.a.c.k, document.location.hostname); qc.addParameter(TNT.a.c.d, this.Be); qc.addParameter(TNT.a.c.n, this.Ce); qc.addParameter(TNT.a.c.o, this.De); qc.addParameter(TNT.a.c.p, this.Ee); qc.addParameter(TNT.a.c.q, this.Fe); qc.addParameter(TNT.a.c.r, this.He); qc.addParameter(TNT.a.c.s, this.Ge); qc.addParameter(TNT.a.C.E, this.Ie.getId()); if (!ze) { qc.addParameter(TNT.a.c.l, this.te); } this.Xe(qc); if (TNT.a.b.crossDomainEnabled) { qc.addParameter(TNT.a.c.t, TNT.a.b.crossDomain); } var c = TNT.getClientMboxExtraParameters(); if (c) { qc.addParameters(c.split('&')); } qc.setUrlProcessAction(function(u) { if (TNT.a.b.passPageParameters) { u += '&'; u += TNT.a.c.u; u += '=' + encodeURIComponent(document.location); var v = encodeURIComponent(document.referrer); if (u.length + v.length < 2000) { u += '&'; u += TNT.a.c.v; u += '=' + v; } } u += '&'; u += TNT.a.c.w; u += '=' + ve; return u; });};mboxFactory.prototype.Ne = function() { document.write('<style>.' + TNT.a.M.R + ' { visibility:hidden; }</style>');};mboxFactory.prototype.isDomLoaded = function() { return this.we;};mboxFactory.prototype.Ae = function() { if (this.Ve) { return; } this.Ve = []; var ad = this; (function() { var lf = document.addEventListener ? "DOMContentLoaded" : "onreadystatechange"; var mf = false; var nf = function() { if (mf) { return; } mf = true; for (var i = 0; i < ad.Ve.length; ++i) { ad.Ve[i](); } }; if (document.addEventListener) { document.addEventListener(lf, function() { document.removeEventListener(lf, arguments.callee, false); nf(); }, false); window.addEventListener("load", function(){ document.removeEventListener("load", arguments.callee, false); nf(); }, false); } else if (document.attachEvent) { if (self !== self.top) { document.attachEvent(lf, function() { if (document.readyState === 'complete') { document.detachEvent(lf, arguments.callee); nf(); } }); } else { var of = function() { try { document.documentElement.doScroll('left'); nf(); } catch (pf) { setTimeout(of, 13); } }; of(); } } if (document.readyState === "complete") { nf(); } })();};mboxScPluginFetcher = function (mb, qf) { this.mb = mb; this.qf = qf;};mboxScPluginFetcher.prototype = { constructor: mboxScPluginFetcher, getType: function () { return 'ajax'; }, fetch: function (qc) { qc.setServerType(this.getType()); var rc = document.getElementsByTagName('head')[0], sc = document.createElement('script'); sc.src = this.rf(qc); rc.appendChild(sc); }, cancel: function () {}, rf: function (qc) { qc.setBasePath('/m2/' + this.mb + '/sc/standard'); this.sf(qc); var tf = TNT.a.c.B; var uf =TNT.a.M.B; qc.addParameter(tf, uf); return qc.buildUrl(); }, sf: function (qc) { var vf = [ "dynamicVariablePrefix", "visitorID", "vmk", "ppu", "charSet", "visitorNamespace", "cookieDomainPeriods", "cookieLifetime", "pageName", "currencyCode", "variableProvider", "channel", "server", "pageType", "transactionID", "purchaseID", "campaign", "state", "zip", "events", "products", "linkName", "linkType", "resolution", "colorDepth", "javascriptVersion", "javaEnabled", "cookiesEnabled", "browserWidth", "browserHeight", "connectionType", "homepage", "pe", "pev1", "pev2", "pev3", "visitorSampling", "visitorSamplingGroup", "dynamicAccountSelection", "dynamicAccountList", "dynamicAccountMatch", "trackDownloadLinks", "trackExternalLinks", "trackInlineStats", "linkLeaveQueryString", "linkDownloadFileTypes", "linkExternalFilters", "linkInternalFilters", "linkTrackVars", "linkTrackEvents", "linkNames", "lnk", "eo" ]; for (var rb = 0; rb < vf.length; rb++) { this.wf(vf[rb], qc); } for (rb = 1; rb <= 75; rb++) { this.wf('prop' + rb, qc); this.wf('eVar' + rb, qc); this.wf('hier' + rb, qc); } }, wf: function (qb, qc) { var W = TNT.a.W, _ = this.qf[qb]; if (W.bb(_) || W.fb(_)) { return; } qc.addParameter(qb, _); }};(function(X){ function xf(zc, qf) { if (!qf) { return null; } var yf = TNT.a.b.siteCatalystPluginName, mb = TNT.a.b.clientCode, W = TNT.a.W; qf["m_" + yf] = function (qf) { var zf = '_t', Bf = 'm_i', Cf = qf[Bf](yf); Cf.ye = true; Cf.mb = mb; Cf[zf] = function () { if (!this.isEnabled()) { return; } var yc = this.cf(), Xd = new mboxScPluginFetcher(this.mb, this.s); if (yc) { yc.setFetcher(Xd); yc.load(); } }; Cf.isEnabled = function () { return this.ye && zc.isEnabled(); }; Cf.cf = function () { var x = this.Df(), Lc = document.createElement('div'); if (!W.Z(document.body)) { document.body.appendChild(Lc); } return zc.create(x, [], Lc); }; Cf.Df = function () { var Ef = this.s.events && this.s.events.indexOf('purchase') != -1; return 'SiteCatalyst: ' + (Ef ? 'purchase' : 'event'); }; }; return qf.loadModule(yf); } X.xf = xf;}(TNT.a));(function(X) { function Ff(Gf, nd, Vc, pd) { if (Gf.targetJSLoaded) { return; } pd.setCookie(nd, true, Vc); window.location.reload(); } function Hf(b, H, pd) { var If = '_AT', Kf = 50, nd = H.K, Vc = b.experienceManagerDisabledTimeout, Jd = b.experienceManagerTimeout, u = b.experienceManagerPluginUrl, Lf = function(Mf) {}, Nf = function(Mf) { setTimeout(function() { window[If].applyWhenReady(Mf); }, Kf); }; if (If in window) { return; } window[If] = {}; if (pd.getCookie(nd) !== 'true') { document.write('<scr' + 'ipt src="' + u + '"><\/sc' + 'ript>'); window[If].applyWhenReady = Nf; setTimeout(function() { Ff(window[If], nd, Vc, pd); }, Jd); } else { window[If].applyWhenReady = Lf; } } X.Hf = Hf;}(TNT.a));(function(X, a, W, b, c, M){ function Of() { return b.globalMboxName; } function Pf() { return b.globalMboxLocationDomId; } function Qf() { return b.globalMboxAutoCreate; } function Rf() { return b.parametersFunction(); } function Sf() { var Ic = 1, Tf = document.getElementsByTagName('script'), Jc = Tf[Tf.length - 1]; while (Jc) { if (Jc.nodeType === Ic && Jc.className === M.R) { return Jc; } Jc = Jc.previousSibling; } return null; } function Uf(zc, x, c) { var bf, yc; if (a.mc()) { bf = Sf(); yc = zc.create( x, c, bf); } else { yc = zc.create( x, c); } if (yc && zc.isEnabled()) { yc.load(); } return yc; } function Vf(zc, bf, x, c) { return zc.df(x, c, bf); } function Wf(zc, x, c) { zc.update(x, c); } function Xf(pd, qb) { return pd.getCookie(qb); } function Yf(pd, qb, _, Vc) { pd.setCookie(qb, _, Vc); } function Zf(_f) { var _b = []; var ag = /([^&=]+)=([^&]*)/g; var bg = decodeURIComponent; var wd = ag.exec(_f); while (wd) { _b.push([bg(wd[1]), bg(wd[2])].join('=')); wd = ag.exec(_f); } return _b; } function Yb(cg, vc, Wb) { var _b = []; for (var Xb in cg) { if (!cg.hasOwnProperty(Xb)) { continue; } var _ = cg[Xb]; if (W.fb(_)) { vc.push(Xb); _b = _b.concat(Yb(_, vc, Wb)); vc.pop(); } else { if (vc.length > 0) { _b.push([Wb(vc.concat(Xb).join('.')), _].join('=')); } else { _b.push([Wb(Xb), _].join('=')); } } } return _b; } function dg() { var eg = window.targetPageParams, Wb = function(Xb) { return Xb }; if (!W.cb(eg)) { return []; } var _b = null; try { _b = eg(); } catch (fg) {} if (W.ab(_b)) { return []; } if (W.db(_b)) { return _b; } if (W.eb(_b) && !W.bb(_b)) { return Zf(_b); } if (W.fb(_b)) { return Yb(_b, [], Wb); } return []; } function gg(zc) { var hg = Of(), ig = Pf(), jg = dg(), kg, lg, mg; if (!ig) { ig = "mbox-" + hg + "-" + mboxGenerateId(); kg = document.createElement("div"); kg.className = "mboxDefault"; kg.id = ig; kg.style.visibility = "hidden"; kg.style.display = "none"; lg = setInterval(function(){ if (document.body) { clearInterval(lg); document.body.insertBefore(kg, document.body.firstChild); } }, b.bodyPollingTimeout); } mg = zc.create(hg, jg, ig); if (mg && zc.isEnabled()) { if (!zc.isDomLoaded()) { if (!a.mc()) { mg.setFetcher(new a.tc()); } else { mg.setFetcher(new mboxAjaxFetcher()); } } mg.load(); } } function ng(zc, x, nb) { if (!zc.isEnabled()) { return; } var ef = new Date(), og = ef.getTimezoneOffset() * M.Q, qc = zc.getUrlBuilder().clone(); qc.setBasePath('/m2/' + b.clientCode + '/viztarget'); qc.addParameter(c.x, x); qc.addParameter(c.y, 0); qc.addParameter(c.j, zc.getMboxes().length() + 1); qc.addParameter(c.A, ef.getTime() - og); qc.addParameter(c.d, mboxGenerateId()); qc.addParameter(c.z, zc.isDomLoaded()); if (nb && nb.length > 0) { qc.addParameters(nb); } zc.Xe(qc); zc.Ye(qc, x); zc.We(qc, x); return qc.buildUrl(); } function pg() { return new mboxMap(); } function qg(rg, mb, te) { return new mboxFactory(rg, mb, te); } function sg() { if (!b.bodyHidingEnabled) { return; } var rc = document.getElementsByTagName('head')[0]; var tg = document.createElement('style'); tg.id = 'at-id-body-style'; tg.innerHTML = b.bodyHiddenStyle; if (rc) { rc.appendChild(tg); } } function ug() { if (!b.bodyHidingEnabled) { return; } setTimeout(function() { var rc = document.getElementsByTagName('head')[0]; var tg = document.getElementById('at-id-body-style'); if (rc && tg) { rc.removeChild(tg); } }, b.visitorApiPageDisplayTimeout); } a.Uf = Uf; a.Vf = Vf; a.Wf = Wf; a.ng = ng; a.Xf = Xf; a.Yf = Yf; a.gg = gg; a.pg = pg; a.qg = qg; a.Yb = Yb; a.ug = ug; a.sg = sg; X.getGlobalMboxName = Of; X.getGlobalMboxLocation = Pf; X.isAutoCreateGlobalMbox = Qf; X.getClientMboxExtraParameters = Rf; X.getTargetPageParameters = dg;}(TNT, TNT.a, TNT.a.W, TNT.a.b, TNT.a.c, TNT.a.M));(function(X){ function vg(pd, b, wg, xg) { var yg = 60 * 60, zg = mboxGetPageParameter(wg, true) || pd.getCookie(xg); if (!zg) { return; } setTimeout(function() { if (typeof(window.mboxDebugLoaded) === 'undefined') { alert('Could not load the remote debug.\nPlease check your connection to ' + b.companyName + ' servers'); } }, yg); var Cb = []; Cb.push(b.adminUrl, '/mbox/mbox_debug.jsp', '?'); Cb.push('mboxServerHost', '=', b.serverHost, '&'); Cb.push('clientCode', '=', b.clientCode); document.write('<' + 'scr' + 'ipt src="' + Cb.join('') + '"><' + '\/scr' + 'ipt>'); } function Ag (b, Bg) { var W = X.W, Cg, Dg, _; if (W.Z(b) || W.ab(b) || !W.fb(b)) { return Bg; } for (var Xb in b) { Cg = b.hasOwnProperty(Xb) && Bg.hasOwnProperty(Xb); _ = b[Xb]; Dg = !W.Z(_) && !W.ab(_); if (Cg && Dg) { Bg[Xb] = _; } } return Bg; } function Eg(zc, pd) { TNT.createGlobalMbox = function() { X.gg(zc); }; window.mboxCreate = function(x ) { var c = [].slice.call(arguments, 1); return X.Uf(zc, x, c); }; window.mboxDefine = function(bf, x ) { var c = [].slice.call(arguments, 2); return X.Vf(zc, bf, x, c); }; window.mboxUpdate = function(x ) { var c = [].slice.call(arguments, 1); X.Wf(zc, x, c); }; window.mboxVizTargetUrl = function(x ) { var c = [].slice.call(arguments, 1); return X.ng(zc, x, c); }; window.mboxSetCookie = function(qb, _, Vc) { return X.Yf(pd, qb, _, Vc); }; window.mboxGetCookie = function(qb) { return X.Xf(pd, qb); }; if (typeof(X.xf) !== 'undefined') { window.mboxLoadSCPlugin = function(qf) { return X.xf(zc, qf); } } } function Fg() { if (typeof(window.mboxVersion) !== 'undefined') { return; } X.b = Ag(window.targetGlobalSettings, X.b); var b = X.b, ve = b.mboxVersion, rg = b.serverHost, mb = b.clientCode, N = X.M.N, wg = X.C.G, xg = X.H.G, Gg = X.H.L, zc, pd; window.mboxFactories = X.pg(); window.mboxFactoryDefault = zc = X.qg(rg, mb, N); window.mboxVersion = ve; pd = zc.getCookieManager(); Eg(zc, pd); vg(pd, b, wg, xg); X.zb = function(Hg) { var lb; if (!b.overrideMboxEdgeServer) { return Hg; } lb = pd.getCookie(Gg); return lb === null ? Hg : lb; } } X.Fg = Fg;}(TNT.a));TNT.a.Fg();TNT.a.Hf(TNT.a.b, TNT.a.H,window.mboxFactoryDefault.getCookieManager());if (TNT.isAutoCreateGlobalMbox()) { TNT.a.sg(); TNT.createGlobalMbox(); TNT.a.ug();}